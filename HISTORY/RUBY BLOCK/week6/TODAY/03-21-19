The MVC Pattern
  https://github.com/Ada-Developers-Academy/textbook-curriculum/blob/master/02-intermediate-ruby/mvc.md

  Learning Goals
    Explain how the MVC pattern helps to organize programs
    Define the terms Model, View and Controller
    Identify program components as Models, Views or Controllers 


  Activity 
    What is each class responsible for?
    How do the classes connect to each other? Where does one class call the method of another class, and which class is doing the calling?
    Draw a picture of these connections, with boxes for the classes, and arrows for method calls. Include the main method from slack.rb as well.
    What patterns do you notice?

    How do method calls flow through the app?
    Is there a direction to the flow, with one component at the start and another at the end?
    How does this compare to other projects we've built in this course?

  SLACK_CLI intro to MVC model
    Model	Each class represents an individual domain object. They contain factory methods and business logic. A program typically contains many instances of these classes.	User, Channel
    Controller	One class to keep track of models and program state. Typically there's only one instance per program. Methods correspond to things the user can do.	Workspace
    View	A method or class to handle interacting with the user. For a CLI program, typically this is a command loop full of puts and gets.	The main method in slack.rb

  VOCAB
    MODEL - business logic, factory methods, data storage (many)
    CONTROLLER - Keeps track of models and program state (usually one)
    VIEW - Interacts with user, CLI/WEBPAGE/"The pretty part"

  